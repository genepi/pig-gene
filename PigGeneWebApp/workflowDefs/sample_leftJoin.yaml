!piggene.serialisation.Workflow
name: sample_leftJoin
description: Joins a vcf-file with the vcf-reference-file and removes all entries, where there exists
   an rsNumber.
inputParameters: 
- meinInput1
- meinInput22
outputParameters: 
- meinOutput
workflow: 
-  comment: Loads the vcf-input file.
   input: input1
   input2: '-'
   operation: LOAD
   options: vcf
   options2: '-'
   referenceName: 
   relation: R1
-  comment: Loads the vcf-reference file.
   input: input2
   input2: '-'
   operation: LOAD
   options: vcf
   options2: ref
   referenceName: 
   relation: R2
-  comment: Performs a LEFT join between the two loaded relations. The joint columns are chrom and pos.
   input: '-'
   input2: '-'
   operation: SCRIPT
   options: R3 = JOIN R1 BY (chrom,pos) LEFT, R2 BY (chrom,pos);
   options2: '-'
   referenceName: 
   relation: script
-  comment: Selects the needed columns
   input: R3
   input2: '-'
   operation: SELECT
   options: R1::chrom .. R1::persID, R2::id
   options2: '-'
   referenceName: 
   relation: R4
-  comment: 'Filters all lines where the id column is null. That means: where the join was not able to
      match the two relations.'
   input: R4
   input2: '-'
   operation: FILTER
   options: R2::id is null
   options2: '-'
   referenceName: 
   relation: R5
-  comment: Filters the needed columns.
   input: R5
   input2: '-'
   operation: SELECT
   options: R1::chrom .. R1::persID
   options2: '-'
   referenceName: 
   relation: R6
-  comment: Stores the output.
   input: R6
   input2: '-'
   operation: STORE
   options: '-'
   options2: '-'
   referenceName: 
   relation: output1
